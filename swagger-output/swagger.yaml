swagger: '2.0'
info:
  description: |
    Bluedot Innovation Analytics API
    [http://bluedotinnovation.com](http://bluedotinnovation.com)
  version: "0.0.7"
  title: Bluedot Innovation Analytics API
  termsOfService: http://bluedotinnovation.com/terms/
  contact:
    email: ryan@bluedot.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: analytics.bluedot.io
basePath: /
tags:
  - name: checkins
    description: Operations about checkins
    externalDocs:
      description: Find out more
      url: 'http://bluedotinnovation.com'
  - name: checkouts
    description: Operations about checkouts
    externalDocs:
      description: Find out more
      url: 'http://bluedotinnovation.com'
schemes:
 - https
x-amazon-apigateway-request-validators:
  full:
    validateRequestBody: true
    validateRequestsParameter: true
  body-only:
    validateRequestBody: true
    validateRequestsParameter: false
x-amazon-apigateway-request-validator: full

paths:
  # Check in
  /checkins/_search:
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      operationId: optionCheckIns
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - checkins
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode" : 200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}"
    post:
      tags:
      - checkins
      summary: Get checkIn count by customer, zone, or application
      operationId: getCustomerCheckIns
      consumes:
      - application/json
      produces:
      - application/json
      - text/csv
      parameters:
      - in: body
        name: body
        description: Checkin request
        required: true
        schema: 
          $ref: '#/definitions/CheckInRequest'      
      responses:
        200:
          description: successful operation
          schema:
            type: number
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Content-Type:
              type: string
            Content-Disposition:
              type: string
        400:
          description: Invalid ID supplied
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
        404:
          description: Zone not found
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
      security:
        - publicapi-custom-authorizer: []
      x-amazon-apigateway-integration:
        type: aws
        uri: arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:##AWS_ACCOUNT_NUMBER##:function:${stageVariables.CheckInsLambdaFunctionName}/invocations
        httpMethod: POST
        requestTemplates:
          application/json: '{
            "fun": "getCheckIns",
            "token": "$input.params(''Authorization'')",
            "body": $input.json(''$'')
          }'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Content-Type: "integration.response.body.headers.Content-Type"
              method.response.header.Content-Disposition: "integration.response.body.headers.Content-Disposition"
            responseTemplates: {
              text/csv: "$input.path('$').body",
              application/json: '#if($input.path(''$'').headers.Content-Type == "text/csv")$input.path(''$'').body#{else}$input.json(''$.body'')#end'
            }
          ".*400.*":
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: '#set ($errorMessageObj = $util.parseJson($input.path(''$.errorMessage'')))
                { "errorCode" : "ERRORCODE001", "errorSummary" : "$errorMessageObj.errors.error_summary",
                "errorId" : "TESTCORRELATIONID", "errorCauses" : ["$errorMessageObj.errors.message"]}'
          ".*404.*":
            statusCode: '404'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: '#set ($errorMessageObj = $util.parseJson($input.path(''$.errorMessage'')))
                { "errorCode" : "ERRORCODE001", "errorSummary" : "$errorMessageObj.errors.error_summary",
                "errorId" : "TESTCORRELATIONID", "errorCauses" : ["$errorMessageObj.errors.message"]}'

securityDefinitions:
  publicapi-custom-authorizer:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      type: token
      authorizerUri: "##CUSTOMAUTHORIZER_URI"
      authorizerCredentials: arn:aws:iam::##AWS_ACCOUNT_NUMBER##:role/CONFIGURATION_API_apig_lambda_proxy
      authorizerResultTtlInSeconds: 0

definitions:
  IdsArray:
    type: array
    example: ['1111111-2222-3333-4444-555555555555', '22222222-3333-4444-5555-777777777777']
    items: 
      type: string
      
  CheckInRequest:
    type: object
    description: The list of checkins in json or csv format. By default, the format is json.
    properties:
      projectId:
        description: Only one type of ID is allowed per request
        type: string
        example: '1111111-2222-3333-4444-555555555555'
      zoneIds:
        $ref: '#/definitions/IdsArray'
      accountId:
        description: Only one type of ID is allowed per request
        example: '1111111-2222-3333-4444-555555555555'
      paginationToken:
        type: string
        description: encoded token for next batch of results
      timeType:
        description:  'Enum: [creationTime, eventTime].'
        type: string
        enum:
          - creationTime
          - eventTime
      startTime:
        type: string
        description: 'Example: 2016-07-26T02:30:04.469Z'
      limit:
        type: number
        description: 'Example: 20'
      duration:
        type: string
        description: 'Example: 30d, 100s, 3m'
      groupBy:
        type: string
        enum:
          - day
          - month
          - year
        description: 'Enum: day, month, year'
      format:
        type: string
        enum:
          - csv
          - json
        description: 'Enum: csv, json'
      count:
        type: boolean
        description: 'Return details or count. Default: false'
        
x-suppress:
  # workaround to surpress unnecessary warning
  # https://github.com/swagger-api/swagger-editor/issues/765

externalDocs:
  description: Find out more about Bluedot Innovation
  url: http://bluedotinnovation.com